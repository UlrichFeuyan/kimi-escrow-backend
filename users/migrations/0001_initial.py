# Generated by Django 5.0.8 on 2025-08-12 05:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('role', models.CharField(choices=[('BUYER', 'Acheteur'), ('SELLER', 'Vendeur'), ('ARBITRE', 'Arbitre'), ('ADMIN', 'Administrateur')], default='BUYER', max_length=20)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('phone_verification_token', models.CharField(blank=True, max_length=6)),
                ('phone_verification_expires_at', models.DateTimeField(blank=True, null=True)),
                ('kyc_status', models.CharField(choices=[('PENDING', 'En attente'), ('SUBMITTED', 'Soumis'), ('UNDER_REVIEW', 'En cours de vérification'), ('VERIFIED', 'Vérifié'), ('REJECTED', 'Rejeté'), ('EXPIRED', 'Expiré')], default='PENDING', max_length=20)),
                ('kyc_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('kyc_verified_at', models.DateTimeField(blank=True, null=True)),
                ('kyc_rejection_reason', models.TextField(blank=True)),
                ('id_card_number', models.CharField(blank=True, max_length=50)),
                ('id_card_type', models.CharField(blank=True, choices=[('CNI', "Carte Nationale d'Identité"), ('PASSPORT', 'Passeport'), ('DRIVER_LICENSE', 'Permis de Conduire')], max_length=20)),
                ('address_street', models.CharField(blank=True, max_length=255)),
                ('address_city', models.CharField(blank=True, max_length=100)),
                ('address_region', models.CharField(blank=True, max_length=100)),
                ('address_country', models.CharField(default='Cameroun', max_length=100)),
                ('preferred_language', models.CharField(choices=[('fr', 'Français'), ('en', 'English')], default='fr', max_length=10)),
                ('mfa_enabled', models.BooleanField(default=False)),
                ('mfa_secret', models.CharField(blank=True, max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('ID_FRONT', "Pièce d'identité (recto)"), ('ID_BACK', "Pièce d'identité (verso)"), ('SELFIE', 'Photo selfie'), ('PROOF_OF_ADDRESS', 'Justificatif de domicile'), ('SIGNATURE', 'Signature')], max_length=20)),
                ('file', models.FileField(upload_to='kyc_documents/%Y/%m/%d/')),
                ('status', models.CharField(choices=[('UPLOADED', 'Uploadé'), ('PROCESSING', 'En cours de traitement'), ('VERIFIED', 'Vérifié'), ('REJECTED', 'Rejeté')], default='UPLOADED', max_length=20)),
                ('smile_id_job_id', models.CharField(blank=True, max_length=100)),
                ('smile_id_result', models.JSONField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document KYC',
                'verbose_name_plural': 'Documents KYC',
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('success', models.BooleanField(default=False)),
                ('failure_reason', models.CharField(blank=True, max_length=100)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['phone_number', 'attempted_at'], name='users_login_phone_n_dbf402_idx'), models.Index(fields=['ip_address', 'attempted_at'], name='users_login_ip_addr_bed342_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/%Y/%m/%d/')),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('default_auto_release_days', models.PositiveIntegerField(default=14)),
                ('require_confirmation_for_release', models.BooleanField(default=True)),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('successful_transactions', models.PositiveIntegerField(default=0)),
                ('total_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('rating_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('email_verified', models.BooleanField(default=False)),
                ('bank_account_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil Utilisateur',
                'verbose_name_plural': 'Profils Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(max_length=255, unique=True)),
                ('device_info', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['phone_number'], name='users_custo_phone_n_f2d675_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['role'], name='users_custo_role_6a37b1_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['kyc_status'], name='users_custo_kyc_sta_a1a5ad_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='kycdocument',
            unique_together={('user', 'document_type')},
        ),
    ]
