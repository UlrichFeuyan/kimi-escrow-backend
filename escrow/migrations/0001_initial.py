# Generated by Django 5.0.8 on 2025-08-12 05:53

import core.utils
import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EscrowTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(default=core.utils.generate_transaction_id, max_length=20, unique=True)),
                ('title', models.CharField(help_text='Titre de la transaction', max_length=200)),
                ('description', models.TextField(help_text='Description détaillée')),
                ('category', models.CharField(choices=[('GOODS', 'Biens matériels'), ('SERVICES', 'Services'), ('DIGITAL', 'Produits numériques'), ('REAL_ESTATE', 'Immobilier'), ('VEHICLES', 'Véhicules'), ('OTHER', 'Autre')], default='GOODS', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('PENDING_FUNDS', 'En attente de fonds'), ('FUNDS_HELD', 'Fonds en séquestre'), ('DELIVERED', 'Livré'), ('RELEASED', 'Fonds libérés'), ('DISPUTE', 'En litige'), ('REFUNDED', 'Remboursé'), ('CANCELLED', 'Annulé')], default='PENDING_FUNDS', max_length=20)),
                ('payment_deadline', models.DateTimeField(help_text='Date limite de paiement')),
                ('delivery_deadline', models.DateTimeField(help_text='Date limite de livraison')),
                ('auto_release_date', models.DateTimeField(blank=True, null=True)),
                ('dispute_deadline', models.DateTimeField(blank=True, null=True)),
                ('funds_received_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('auto_release_enabled', models.BooleanField(default=True)),
                ('auto_release_days', models.PositiveIntegerField(default=14)),
                ('require_delivery_confirmation', models.BooleanField(default=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('delivery_method', models.CharField(blank=True, max_length=100)),
                ('tracking_info', models.CharField(blank=True, max_length=200)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Transaction Escrow',
                'verbose_name_plural': 'Transactions Escrow',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('order', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('APPROVED', 'Approuvé'), ('REJECTED', 'Rejeté')], default='PENDING', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True)),
                ('approval_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Jalon',
                'verbose_name_plural': 'Jalons',
                'ordering': ['transaction', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Proof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('proof_type', models.CharField(choices=[('DELIVERY_PHOTO', 'Photo de livraison'), ('RECEIPT', 'Reçu'), ('SIGNATURE', 'Signature'), ('TRACKING', 'Numéro de suivi'), ('INVOICE', 'Facture'), ('WARRANTY', 'Garantie'), ('OTHER', 'Autre')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='proofs/%Y/%m/%d/')),
                ('text_content', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Preuve',
                'verbose_name_plural': 'Preuves',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('is_system_message', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='messages/%Y/%m/%d/')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Message de Transaction',
                'verbose_name_plural': 'Messages de Transaction',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('communication_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('delivery_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('quality_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Évaluation de Transaction',
                'verbose_name_plural': 'Évaluations de Transaction',
            },
        ),
    ]
