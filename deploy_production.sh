#!/bin/bash
# Script de d√©ploiement Kimi Escrow - PRODUCTION
# Utilise Docker Compose pour un d√©ploiement complet

set -e

echo "üöÄ D√©ploiement Kimi Escrow - PRODUCTION"
echo "========================================"

# V√©rifier que Docker et Docker Compose sont install√©s
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

# V√©rifier que le fichier d'environnement existe
if [ ! -f "env.production" ]; then
    echo "‚ùå Le fichier env.production n'existe pas."
    echo "Veuillez cr√©er ce fichier avec vos param√®tres de production."
    exit 1
fi

# Arr√™ter les services existants
echo "üõë Arr√™t des services existants..."
docker-compose down --remove-orphans

# Nettoyer les images et volumes si n√©cessaire
if [ "$1" = "--clean" ]; then
    echo "üßπ Nettoyage complet..."
    docker-compose down -v --remove-orphans
    docker system prune -f
fi

# Construire les images
echo "üî® Construction des images Docker..."
docker-compose build --no-cache

# D√©marrer les services
echo "üöÄ D√©marrage des services..."
docker-compose up -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente que les services soient pr√™ts..."
sleep 30

# V√©rifier l'√©tat des services
echo "üîç V√©rification de l'√©tat des services..."
docker-compose ps

# V√©rifier les logs
echo "üìã Logs des services:"
docker-compose logs --tail=20

# V√©rifier la sant√© de l'application
echo "üè• V√©rification de la sant√© de l'application..."
if curl -f http://localhost:8000/api/core/health/ > /dev/null 2>&1; then
    echo "‚úÖ Application en ligne et accessible!"
else
    echo "‚ö†Ô∏è  L'application n'est pas encore accessible, attendez quelques secondes..."
    echo "Vous pouvez v√©rifier les logs avec: docker-compose logs -f web"
fi

echo ""
echo "üéâ D√©ploiement termin√©!"
echo ""
echo "üì± Services disponibles:"
echo "   - Application web: http://localhost:8000"
echo "   - Admin Django: http://localhost:8000/admin/"
echo "   - API Swagger: http://localhost:8000/swagger/"
echo "   - Base de donn√©es: localhost:5434"
echo "   - Redis: localhost:6381"
echo ""
echo "üîß Commandes utiles:"
echo "   - Voir les logs: docker-compose logs -f [service]"
echo "   - Arr√™ter: docker-compose down"
echo "   - Red√©marrer: docker-compose restart"
echo "   - Nettoyer: ./deploy_production.sh --clean"
